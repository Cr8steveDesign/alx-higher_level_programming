# Test Cases for the method
>>> MyList = __import__("1-my_list").MyList
>>>
----------------------------------------------------------

Case 1: Normal Scenario

>>> my_custom_list = MyList([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5])
>>> my_custom_list.print_sorted()
[1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 9]
>>>

Case 2: Different type in set
>>> my_custom_list = MyList([None, 3, 6, 5, 3, 5])
>>> my_custom_list.print_sorted()
Traceback (most recent call last):
...
TypeError: '<' not supported between instances of 'int' and 'NoneType'
>>>

Case 3: Different type in set
>>> my_custom_list = MyList([{2}, 3, 6, 5, 3, 5])
>>> my_custom_list.print_sorted()
Traceback (most recent call last):
...
TypeError: '<' not supported between instances of 'int' and 'set'
>>>

Case 4: Different type in set
>>> my_custom_list = MyList([3, 6, (2,)])
>>> my_custom_list.print_sorted()
Traceback (most recent call last):
...
TypeError: '<' not supported between instances of 'tuple' and 'int'
>>>

Case 5: Different type in set
>>> my_custom_list = MyList([3, 6, {3:4}])
>>> my_custom_list.print_sorted()
Traceback (most recent call last):
...
TypeError: '<' not supported between instances of 'dict' and 'int'
>>>

Case 5: Different type in set
>>> my_custom_list = MyList([3, 6, "Hello"])
>>> my_custom_list.print_sorted()
Traceback (most recent call last):
...
TypeError: '<' not supported between instances of 'str' and 'int'
>>>

Case 6: Not defined Object
>>> MyList = __import__("1-my_list").MyList
>>> newlist.print_sorted()
Traceback (most recent call last):
...
NameError: name "newlist" is not defined
>>>

-----------------------------------------------
Case 7: Empty List
>>> my_custom_list = MyList()
>>> empty_list = []
>>> my_custom_list.append(empty_list)
>>> my_custom_list.print_sorted()
[]
>>>

-----------------------------------------
Case 8: unique number
>>> my_custom_list = MyList()
>>> my_custom_list.append(7)
>>> my_custom_list.print_sorted()
[7]
>>>

